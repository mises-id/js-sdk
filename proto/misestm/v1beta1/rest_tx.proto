syntax = "proto3";
package misesid.misestm.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/abci/v1beta1/abci.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "misestm/v1beta1/DidRegistry.proto";

option go_package = "github.com/mises-id/mises-tm/x/misestm/types";

// RestTx defines the gRPC rest service.
service RestTx {

	// create a did for user or app
	rpc CreateDid(RestCreateDidRequest) returns (RestTxResponse) {
		option (google.api.http) = {
      post: "/mises/did"
      body: "*"
    };
	}

	// update a user info
	rpc UpdateUserInfo(RestUpdateUserInfoRequest) returns (RestTxResponse) {
		option (google.api.http) = {
      post: "/mises/user"
      body: "*"
    };
	}

	// update a user relation
	rpc UpdateUserRelation(RestUpdateUserRelationRequest) returns (RestTxResponse) {
		option (google.api.http) = {
      post: "/mises/user/relation"
      body: "*"
    };
	}

	// query a tx result
	rpc QueryTx(RestQueryTxRequest) returns (RestTxResponse) {
		option (google.api.http).get = "/mises/tx";
	}


	// update an app info
	rpc UpdateAppInfo(RestUpdateAppInfoRequest) returns (RestTxResponse) {
		option (google.api.http) = {
      post: "/mises/app"
      body: "*"
    };
	}

	// update the gas fee a app granted for a user
	rpc UpdateAppFeeGrant(RestUpdateAppFeeGrantRequest) returns (RestTxResponse) {
		option (google.api.http) = {
      post: "/mises/app/feegrant"
      body: "*"
    };
	}

}

message RestCreateDidRequest {
	string mises_appid = 1;
	string mises_id = 2;
	string pub_key = 3;
}

message PrivateUserInfo {
	string enc_data = 1;
	string iv = 2;
}
message PublicUserInfo {
	string name = 1;
	string gender = 2;
	string avatar_url = 3;
	string home_page_url = 4;
	repeated string emails = 5;
	repeated string telephones = 6;
	string intro = 7;
}

message RestUpdateUserInfoRequest {
	string mises_appid = 1;
	string mises_uid = 2;
	PublicUserInfo pub_info = 3;
	PrivateUserInfo pri_info = 4;
}

message RestUpdateUserRelationRequest {
	string mises_appid = 1;
	string mises_uid = 2;
	string target_id = 3;
	string action = 4;
}


message RestQueryTxRequest {
	string  txhash = 1;
}

message RestTxResponse {
	// tx_response is the queried TxResponses.
  	cosmos.base.abci.v1beta1.TxResponse tx_response = 1;
	uint32 code = 2;
}



message PublicAppInfo {
	string name = 1; 
	repeated string domains = 2; 
	string developer = 3;
	string home_url = 4; 
	string icon_url = 5; 
	uint64 version = 6;
}

message RestUpdateAppInfoRequest {
	string mises_appid = 1;
	PublicAppInfo pub_info = 2;
}

message AppFeeGrant {
	cosmos.base.v1beta1.Coin spend_limit = 1;
	google.protobuf.Duration period = 2 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
	google.protobuf.Timestamp expiration = 3 [(gogoproto.stdtime) = true];
}

message RestUpdateAppFeeGrantRequest {
	string mises_appid = 1;
	string mises_uid = 2;
	AppFeeGrant grant = 3[(gogoproto.nullable) = true];
	bool revoke = 4;
}



